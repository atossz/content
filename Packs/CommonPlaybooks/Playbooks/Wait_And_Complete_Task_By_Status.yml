id: Wait And Complete Task By Status
version: -1
name: Wait And Complete Task By Status
description: Waits for a task to reach a certain status, and/or completes the task. The playbook
  should be used in a loop until the FoundTaskNames context key contains the name of the awaited task (the playbook outputs that name).
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 93091f09-b684-4ce6-801a-ba560eac3623
    type: start
    task:
      id: 93091f09-b684-4ce6-801a-ba560eac3623
      version: -1
      name: ""
      iscommand: false
      brand: ""
      description: ''
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "1":
    id: "1"
    taskid: fff214c1-ac24-483c-82e0-0ae851c0f25a
    type: regular
    task:
      id: fff214c1-ac24-483c-82e0-0ae851c0f25a
      version: -1
      name: Get tasks by state
      description: Get all tasks for specific incident by the given state.
      scriptName: DemistoGetIncidentTasksByState
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      incidentId:
        complex:
          root: inputs.IncidentID
      states:
        complex:
          root: inputs.TaskStates
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 190
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "2":
    id: "2"
    taskid: dba0a8e8-6f55-46d0-8670-073d127007b1
    type: condition
    task:
      id: dba0a8e8-6f55-46d0-8670-073d127007b1
      version: -1
      name: Was any task found?
      description: Checks whether any task to wait for was found.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "10"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: Tasks
                accessor: id
            iscontext: true
    view: |-
      {
        "position": {
          "x": 780,
          "y": 570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "3":
    id: "3"
    taskid: 9323bde4-66a3-4c53-8a1e-d075306eb482
    type: regular
    task:
      id: 9323bde4-66a3-4c53-8a1e-d075306eb482
      version: -1
      name: Complete the task
      description: commands.local.cmd.task.complete
      script: Builtin|||taskComplete
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      id:
        complex:
          root: Tasks
          accessor: id
      incidentId:
        complex:
          root: inputs.IncidentID
      input:
        complex:
          root: inputs.CompleteOption
      parentPlaybookID:
        complex:
          root: Tasks
          accessor: parentPlaybookID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 1300,
          "y": 960
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "4":
    id: "4"
    taskid: d83d6208-2d46-4301-8fba-5f097fa85584
    type: title
    task:
      id: d83d6208-2d46-4301-8fba-5f097fa85584
      version: -1
      name: Continue (run in loop)
      type: title
      iscommand: false
      brand: ""
      description: ''
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 460,
          "y": 1090
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "5":
    id: "5"
    taskid: c3e16a4d-eef0-4a61-8572-530f0844dcc4
    type: regular
    task:
      id: c3e16a4d-eef0-4a61-8572-530f0844dcc4
      version: -1
      name: Save found task names as output
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      key:
        simple: FoundTaskNames
      value:
        complex:
          root: Tasks
          accessor: name
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 990,
          "y": 1140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "6":
    id: "6"
    taskid: 54066531-90b3-4133-831d-0705c8d61363
    type: condition
    task:
      id: 54066531-90b3-4133-831d-0705c8d61363
      version: -1
      name: Was a task name to complete defined?
      description: Checks whether a task to wait for was defined.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "2"
      "yes":
      - "7"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: inputs.TaskName
            iscontext: true
    view: |-
      {
        "position": {
          "x": 450,
          "y": 360
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "7":
    id: "7"
    taskid: ceb397e3-8477-41e8-8ada-72ed77b7d3c3
    type: condition
    task:
      id: ceb397e3-8477-41e8-8ada-72ed77b7d3c3
      version: -1
      name: Was the task with the defined name found?
      description: Checks whether the task that needs to be awaited has reached the
        specified status.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "4"
      "yes":
      - "11"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isNotEmpty
          left:
            value:
              complex:
                root: Tasks.name
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: Tasks.name
                      iscontext: true
                    right:
                      value:
                        simple: inputs.TaskName
                      iscontext: true
            iscontext: true
    view: |-
      {
        "position": {
          "x": 140,
          "y": 570
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "8":
    id: "8"
    taskid: b6d64f6f-6587-428c-8dd6-2d36137c8066
    type: regular
    task:
      id: b6d64f6f-6587-428c-8dd6-2d36137c8066
      version: -1
      name: Complete the task
      description: commands.local.cmd.task.complete
      script: Builtin|||taskComplete
      type: regular
      iscommand: true
      brand: Builtin
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      id:
        complex:
          root: Tasks
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Tasks.name
                iscontext: true
              right:
                value:
                  simple: inputs.TaskName
                iscontext: true
          accessor: id
      incidentId:
        complex:
          root: inputs.IncidentID
      input:
        complex:
          root: inputs.CompleteOption
      parentPlaybookID:
        complex:
          root: Tasks
          accessor: parentPlaybookID
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -380,
          "y": 960
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "9":
    id: "9"
    taskid: c45445d0-8823-46a0-8ead-b78ef97792b5
    type: regular
    task:
      id: c45445d0-8823-46a0-8ead-b78ef97792b5
      version: -1
      name: Save found task name as output
      description: Set a value in context under the key you entered.
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      key:
        simple: FoundTaskNames
      value:
        complex:
          root: Tasks.name
          filters:
          - - operator: isEqualString
              left:
                value:
                  simple: Tasks.name
                iscontext: true
              right:
                value:
                  simple: inputs.TaskName
                iscontext: true
    separatecontext: false
    view: |-
      {
        "position": {
          "x": -110,
          "y": 1140
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "10":
    id: "10"
    taskid: b1a6c385-d607-4b11-8a2c-736c54c9e59e
    type: condition
    task:
      id: b1a6c385-d607-4b11-8a2c-736c54c9e59e
      version: -1
      name: Should the task be completed?
      description: Checks whether the task should be completed.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "5"
      "yes":
      - "3"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.CompleteTask
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": 990,
          "y": 780
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
  "11":
    id: "11"
    taskid: df8de7a1-626b-4f73-8b56-dd55ce1947d0
    type: condition
    task:
      id: df8de7a1-626b-4f73-8b56-dd55ce1947d0
      version: -1
      name: Should the task be completed?
      description: Checks whether the task should be completed.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "9"
      "yes":
      - "8"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isEqualString
          left:
            value:
              complex:
                root: inputs.CompleteTask
            iscontext: true
          right:
            value:
              simple: "True"
          ignorecase: true
    view: |-
      {
        "position": {
          "x": -110,
          "y": 780
        }
      }
    note: false
    timertriggers: []
    ignoreworker: false
    skipunavailable: false
    quietmode: 0
    isoversize: false
    isautoswitchedtoquietmode: false
view: |-
  {
    "linkLabelsPosition": {
      "10_5_#default#": 0.29,
      "11_9_#default#": 0.3,
      "2_4_#default#": 0.27,
      "7_4_#default#": 0.27
    },
    "paper": {
      "dimensions": {
        "height": 1185,
        "width": 2060,
        "x": -380,
        "y": 50
      }
    }
  }
inputs:
- key: TaskStates
  value: {}
  required: false
  description: 'Comma separated list of states. Possible values: New, InProgress,
    Completed, Waiting, Error, Skipped, Blocked (leave empty to get all tasks)'
  playbookInputQuery:
- key: CompleteOption
  value: {}
  required: false
  description: The path to take in conditional tasks. For example, if your conditional
    task has "Yes" or "No", a possible value here may be "Yes".
  playbookInputQuery:
- key: IncidentID
  value: {}
  required: true
  description: The ID of the incident where the task should be completed.
  playbookInputQuery:
- key: TaskName
  value: {}
  required: false
  description: Optional - the name of the task that should be completed.
  playbookInputQuery:
- key: CompleteTask
  value:
    simple: "True"
  required: false
  description: Whether to also complete the task, or just check if it's completed.
    Can be True or False.
  playbookInputQuery:
outputs:
- contextPath: FoundTaskNames
  description: The names of the tasks that were found and completed.
  type: unknown
tests:
- Calculate Severity - Generic v2 - Test
- Test Convert file hash to corresponding hashes
- Detonate URL - Generic Test
- Block IP - Generic V3_Test
- Detonate File - Generic Test
- test-domain-indicator
- Account Enrichment - Generic v2.1 - Test
- Generic Polling Test
- URL Enrichment - Generic v2 - Test
- Send Investigation Summary Reports - Test
- Isolate and unisolate endpoint - test
- Endpoint Enrichment - Generic v2.1 - Test
- Wait Until Datetime - Test
- Detonate File - No Files test
- Domain Enrichment - Generic v2 - Test
- Calculate Severity - Standard - Test
- Retrieve File from Endpoint - Generic V2 Test
- Extract Indicators From File - Generic v2 - Test
- Field polling test
- Email Address Enrichment - Generic v2.1 - Test
- File Enrichment - Generic v2 - Test
- IP Enrichment - Generic v2 - Test
- Get endpoint details - Generic - test
fromversion: 6.0.0
